name: USER CD

# release로 시작하는 브랜치에 push될 때
on:
  push:
    branches: ["release-*"]

# 깃헙 토큰 권한 생성
permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 액션 시작
      - name: Checkout code
        uses: actions/checkout@v4

      # 도커 이미지 생성(buildx 방식이 빠름)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 도커 허브 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Docker 이미지 빌드 및 푸시
      # 커밋 번호를 태그로 지정
      - name: Build and Push Docker Image
        run: |
          cd user
          docker buildx build -t ${{ secrets.DOCKER_REPO }}/tosi-be-user:${{ github.sha }} --push .

      # aws 인증
      # aws에 github actions용 role 생성 후 eks access에 추가
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-northeast-2
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubTokenEKSRole

      # kubectl을 TOSI 클러스터와 연결
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ap-northeast-2 --name TOSI

      # user pod을 재시작하여 최신 이미지 pull
      - name: Deploy
        run: kubectl set image deployment/tosi-user-dep tosi-be-user=${{ secrets.DOCKER_REPO }}/tosi-be-user:${{ github.sha }}

      # 2분 대기 후 20초 동안 배포 상태 체크 (성공 시 successfully rolled out 메시지)
      - name: Check deployment status
        run: |
          sleep 120
          kubectl rollout status deployment/tosi-user-dep --timeout=20s

      # 배포 실패 시 이전 버전의 이미지로 롤백
      - name: Rollback
        if: failure()
        run: kubectl rollout undo deployment/tosi-user-dep
